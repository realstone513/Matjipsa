{"ast":null,"code":"var _jsxFileName = \"C:\\\\pycode\\\\reactfront\\\\reactfront\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  // Bearer 토큰을 로컬 스토리지나 다른 저장소에서 불러옵니다.\n  const token = localStorage.getItem('token'); // 예시로 localStorage에서 토큰을 불러옵니다.\n\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      // 요청 헤더에 Authorization 추가\n      const response = await axios.post('http://localhost:8080/api/auth/register', {\n        email,\n        username,\n        password\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          // Bearer 토큰을 헤더에 포함\n          'Content-Type': 'application/json' // 필요한 다른 헤더도 추가\n        }\n      });\n      alert(response.data); // 서버의 응답을 표시\n      navigate('/authenticate'); // 회원가입 후 로그인 페이지로 이동\n    } catch (error) {\n      console.error('회원가입 실패:', error);\n      alert('회원가입에 실패했습니다. 다시 시도해 주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC774\\uBA54\\uC77C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC544\\uC774\\uB514:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"8/ltzVyIfHVAmqazCxUygXjGasE=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Register","_s","email","setEmail","username","setUsername","password","setPassword","navigate","token","localStorage","getItem","handleRegister","e","preventDefault","response","post","headers","alert","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/pycode/reactfront/reactfront/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Register = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  // Bearer 토큰을 로컬 스토리지나 다른 저장소에서 불러옵니다.\r\n  const token = localStorage.getItem('token'); // 예시로 localStorage에서 토큰을 불러옵니다.\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      // 요청 헤더에 Authorization 추가\r\n      const response = await axios.post(\r\n        'http://localhost:8080/api/auth/register', \r\n        {\r\n          email,\r\n          username,\r\n          password,\r\n        }, \r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`, // Bearer 토큰을 헤더에 포함\r\n            'Content-Type': 'application/json', // 필요한 다른 헤더도 추가\r\n          }\r\n        }\r\n      );\r\n      \r\n      alert(response.data); // 서버의 응답을 표시\r\n      navigate('/authenticate'); // 회원가입 후 로그인 페이지로 이동\r\n    } catch (error) {\r\n      console.error('회원가입 실패:', error);\r\n      alert('회원가입에 실패했습니다. 다시 시도해 주세요.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>회원가입</h2>\r\n      <form onSubmit={handleRegister}>\r\n        <div>\r\n          <label>이메일:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>아이디:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>비밀번호:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">회원가입</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}